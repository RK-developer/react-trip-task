{"ast":null,"code":"var _jsxFileName = \"/Users/karthik-6018/Documents/karthick/task/trip/src/components/cardview/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Card, Col, Row, Popconfirm, message, Spin } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport apiRequest from \"../../apiRequest\";\nimport CardEditFormModal from \"../cardEditModalForm\";\n\nconst CardView = props => {\n  const [activeClass, setActiveClass] = useState(0);\n  const [cardLoading, setCardLoading] = useState(false);\n  const [cardModalVisible, setCardModalVisible] = useState(false);\n\n  const tripCardClick = (id, index) => {\n    setActiveClass(id);\n    props.updateActiveRow(props.tripDatas[index]);\n  };\n\n  function confirm(e, id, index) {\n    e.stopPropagation();\n    let newTripData = [...props.tripDatas];\n    setCardLoading(true);\n    apiRequest.deleteTripData(props.urls, {\n      activeId: id\n    }).then(results => {\n      newTripData.splice(index, 1);\n      props.updateTripData(newTripData);\n      message.success('Successfully Deleted');\n      setCardLoading(false);\n    }).catch(error => {\n      message.error('Something went wrong, trip not deleted');\n      setCardLoading(false);\n    });\n  }\n\n  function cancel(e) {\n    e.stopPropagation();\n    message.error('Trip not delete');\n  }\n\n  useEffect(() => {\n    if (props.tripDatas[0] !== undefined) {\n      props.updateActiveRow(props.tripDatas[0]);\n      setActiveClass(props.tripDatas[0].id);\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardEditFormModal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Spin, {\n    spinning: cardLoading,\n    tip: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, Object.keys(props.tripDatas).map(key => {\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      className: activeClass === props.tripDatas[key].id ? \"card-col active\" : \"card-col\",\n      key: 'trip-' + props.tripDatas[key].id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: props.tripDatas[key].destination,\n      bordered: true,\n      actions: [/*#__PURE__*/React.createElement(EditOutlined, {\n        key: \"edit\",\n        title: \"Edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Are you sure delete this trip?\",\n        onConfirm: e => confirm(e, props.tripDatas[key].id, key),\n        onCancel: e => cancel(e),\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onClick: e => e.stopPropagation(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        key: \"delete\",\n        title: \"Delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }))],\n      onClick: e => tripCardClick(props.tripDatas[key].id, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"mr10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, \"Date:\"), moment(props.tripDatas[key].start).format('MMM-DD-YYYY')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"mr10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 19\n      }\n    }, \"Duration:\"), props.tripDatas[key].duration), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-commnet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"mr10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, \"Comments:\"), props.tripDatas[key].comment)));\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    urls: state.url,\n    tripDatas: state.allTripDatas\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    updateTripData: values => {\n      dispatch({\n        type: \"TRIPDATA\",\n        value: values\n      });\n    },\n    updateActiveId: values => {\n      dispatch({\n        type: \"ACTIVEID\",\n        value: values\n      });\n    },\n    updateActiveRow: values => {\n      dispatch({\n        type: \"ACTIVEROW\",\n        value: values\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(CardView);","map":{"version":3,"sources":["/Users/karthik-6018/Documents/karthick/task/trip/src/components/cardview/index.jsx"],"names":["React","useState","useEffect","moment","Card","Col","Row","Popconfirm","message","Spin","EditOutlined","DeleteOutlined","connect","apiRequest","CardEditFormModal","CardView","props","activeClass","setActiveClass","cardLoading","setCardLoading","cardModalVisible","setCardModalVisible","tripCardClick","id","index","updateActiveRow","tripDatas","confirm","e","stopPropagation","newTripData","deleteTripData","urls","activeId","then","results","splice","updateTripData","success","catch","error","cancel","undefined","Object","keys","map","key","destination","start","format","duration","comment","mapStateToProps","state","url","allTripDatas","mapDispacthToProps","dispatch","values","type","value","updateActiveId"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,OAArC,EAA8CC,IAA9C,QAAyD,MAAzD;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,mBAA7C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAK,CAACC,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,CAAD,CAA7C;AACA,QAAK,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAK,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,KAAD,CAAvD;;AAEA,QAAMsB,aAAa,GAAG,CAACC,EAAD,EAAIC,KAAJ,KAAc;AAClCP,IAAAA,cAAc,CAACM,EAAD,CAAd;AACAR,IAAAA,KAAK,CAACU,eAAN,CAAsBV,KAAK,CAACW,SAAN,CAAgBF,KAAhB,CAAtB;AACD,GAHD;;AAIA,WAASG,OAAT,CAAiBC,CAAjB,EAAmBL,EAAnB,EAAsBC,KAAtB,EAA6B;AAC3BI,IAAAA,CAAC,CAACC,eAAF;AACA,QAAIC,WAAW,GAAG,CAAC,GAAGf,KAAK,CAACW,SAAV,CAAlB;AACAP,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAP,IAAAA,UAAU,CAACmB,cAAX,CAA0BhB,KAAK,CAACiB,IAAhC,EAAqC;AAACC,MAAAA,QAAQ,EAAEV;AAAX,KAArC,EAAqDW,IAArD,CAA2DC,OAAD,IAAa;AACrEL,MAAAA,WAAW,CAACM,MAAZ,CAAmBZ,KAAnB,EAAyB,CAAzB;AACAT,MAAAA,KAAK,CAACsB,cAAN,CAAqBP,WAArB;AACAvB,MAAAA,OAAO,CAAC+B,OAAR,CAAgB,sBAAhB;AACAnB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KALD,EAKGoB,KALH,CAKSC,KAAK,IAAI;AAChBjC,MAAAA,OAAO,CAACiC,KAAR,CAAc,wCAAd;AACArB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD,KARD;AASD;;AAED,WAASsB,MAAT,CAAgBb,CAAhB,EAAmB;AACjBA,IAAAA,CAAC,CAACC,eAAF;AACAtB,IAAAA,OAAO,CAACiC,KAAR,CAAc,iBAAd;AACD;;AACDvC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAGc,KAAK,CAACW,SAAN,CAAgB,CAAhB,MAAuBgB,SAA1B,EAAqC;AACnC3B,MAAAA,KAAK,CAACU,eAAN,CAAsBV,KAAK,CAACW,SAAN,CAAgB,CAAhB,CAAtB;AACAT,MAAAA,cAAc,CAACF,KAAK,CAACW,SAAN,CAAgB,CAAhB,EAAmBH,EAApB,CAAd;AACD;AAEF,GANQ,EAMP,CAACR,KAAD,CANO,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEC,oBAAC,IAAD;AAAM,IAAA,QAAQ,EAAEG,WAAhB;AAA6B,IAAA,GAAG,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,GAAD;AAAK,IAAA,MAAM,EAAE,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGyB,MAAM,CAACC,IAAP,CAAY7B,KAAK,CAACW,SAAlB,EAA6BmB,GAA7B,CAAiCC,GAAG,IAAI;AACvC,wBACE,oBAAC,GAAD;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,SAAS,EAAE9B,WAAW,KAAKD,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBvB,EAArC,GAA0C,iBAA1C,GAA6D,UAAtF;AAAkG,MAAA,GAAG,EAAE,UAAQR,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBvB,EAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAER,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBC,WAD9B;AAEE,MAAA,QAAQ,EAAE,IAFZ;AAGE,MAAA,OAAO,EAAE,cACP,oBAAC,YAAD;AAAc,QAAA,GAAG,EAAC,MAAlB;AAAyB,QAAA,KAAK,EAAC,MAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO,eAEP,oBAAC,UAAD;AACE,QAAA,KAAK,EAAC,gCADR;AAEE,QAAA,SAAS,EAAGnB,CAAD,IAAOD,OAAO,CAACC,CAAD,EAAIb,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBvB,EAAzB,EAA6BuB,GAA7B,CAF3B;AAGE,QAAA,QAAQ,EAAGlB,CAAD,IAAOa,MAAM,CAACb,CAAD,CAHzB;AAIE,QAAA,MAAM,EAAC,KAJT;AAKE,QAAA,UAAU,EAAC,IALb;AAME,QAAA,OAAO,EAAGA,CAAD,IAAOA,CAAC,CAACC,eAAF,EANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAQE,oBAAC,cAAD;AAAgB,QAAA,GAAG,EAAC,QAApB;AAA6B,QAAA,KAAK,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,CAFO,CAHX;AAgBA,MAAA,OAAO,EAAGD,CAAD,IAAON,aAAa,CAACP,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBvB,EAAtB,EAA0BuB,GAA1B,CAhB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAkBE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EACgC5C,MAAM,CAACa,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBE,KAAtB,CAAN,CAAmCC,MAAnC,CAA0C,aAA1C,CADhC,CAlBF,eAqBE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EACoClC,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBI,QADzD,CArBF,eAwBE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EACoCnC,KAAK,CAACW,SAAN,CAAgBoB,GAAhB,EAAqBK,OADzD,CAxBF,CAFF,CADF;AAkCA,GAnCD,CAHH,CADD,CAFD,CADF;AAiDD,CApFD;;AAsFA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLrB,IAAAA,IAAI,EAAEqB,KAAK,CAACC,GADP;AAEL5B,IAAAA,SAAS,EAAE2B,KAAK,CAACE;AAFZ,GAAP;AAID,CALD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLpB,IAAAA,cAAc,EAAEqB,MAAM,IAAI;AACxBD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,KAAK,EAAEF;AAA3B,OAAD,CAAR;AACD,KAHI;AAILG,IAAAA,cAAc,EAAEH,MAAM,IAAI;AACxBD,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE,UAAR;AAAoBC,QAAAA,KAAK,EAAEF;AAA3B,OAAD,CAAR;AACD,KANI;AAOLjC,IAAAA,eAAe,EAAEiC,MAAM,IAAI;AACzBD,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAE,WAAP;AAAmBC,QAAAA,KAAK,EAAEF;AAA1B,OAAD,CAAR;AACD;AATI,GAAP;AAWD,CAZD;;AAaA,eAAe/C,OAAO,CACpByC,eADoB,EAEpBI,kBAFoB,CAAP,CAGb1C,QAHa,CAAf","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport moment from \"moment\";\nimport { Card, Col, Row, Popconfirm, message, Spin} from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport apiRequest from \"../../apiRequest\";\nimport CardEditFormModal from \"../cardEditModalForm\";\n\nconst CardView = (props) => {\n  const[activeClass, setActiveClass] = useState(0);\n  const[cardLoading, setCardLoading] = useState(false);\n  const[cardModalVisible, setCardModalVisible] = useState(false);\n  \n  const tripCardClick = (id,index) => {\n    setActiveClass(id);\n    props.updateActiveRow(props.tripDatas[index]);\n  }\n  function confirm(e,id,index) {\n    e.stopPropagation();\n    let newTripData = [...props.tripDatas];\n    setCardLoading(true);\n    apiRequest.deleteTripData(props.urls,{activeId: id}).then((results) => {\n      newTripData.splice(index,1);\n      props.updateTripData(newTripData);\n      message.success('Successfully Deleted');\n      setCardLoading(false);\n    }).catch(error => {\n      message.error('Something went wrong, trip not deleted');\n      setCardLoading(false);\n    })\n  }\n  \n  function cancel(e) {\n    e.stopPropagation();\n    message.error('Trip not delete');\n  }\n  useEffect(() => {\n    if(props.tripDatas[0] !== undefined) {\n      props.updateActiveRow(props.tripDatas[0]);\n      setActiveClass(props.tripDatas[0].id);\n    }\n    \n  },[props])\n  return (\n    <div className=\"site-card-wrapper\">\n    <CardEditFormModal />\n     <Spin spinning={cardLoading} tip=\"Loading...\">\n      <Row gutter={16}>\n       {\n         \n         Object.keys(props.tripDatas).map(key => {\n          return (\n            <Col span={8} className={activeClass === props.tripDatas[key].id ? \"card-col active\": \"card-col\"} key={'trip-'+props.tripDatas[key].id}>\n            \n              <Card\n                title={props.tripDatas[key].destination}\n                bordered={true}\n                actions={[\n                  <EditOutlined key=\"edit\" title=\"Edit\" />,\n                  <Popconfirm\n                    title=\"Are you sure delete this trip?\"\n                    onConfirm={(e) => confirm(e, props.tripDatas[key].id, key)}\n                    onCancel={(e) => cancel(e)}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    <DeleteOutlined key=\"delete\" title=\"Delete\" />\n                  </Popconfirm>,\n                ]}\n              onClick={(e) => tripCardClick(props.tripDatas[key].id, key)}\n              >\n                <div className=\"trip-date\">\n                  <b className=\"mr10\">Date:</b>{moment(props.tripDatas[key].start).format('MMM-DD-YYYY')}\n                </div>\n                <div className=\"trip-duration\">\n                  <b className=\"mr10\">Duration:</b>{props.tripDatas[key].duration}\n                </div>\n                <div className=\"trip-commnet\">\n                  <b className=\"mr10\">Comments:</b>{props.tripDatas[key].comment}\n                </div>\n              </Card>\n            </Col>\n          )\n\n         })\n       }\n        \n      </Row>\n      </Spin>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    urls: state.url,\n    tripDatas: state.allTripDatas\n  };\n};\nconst mapDispacthToProps = dispatch => {\n  return {\n    updateTripData: values => {\n      dispatch({ type: \"TRIPDATA\", value: values });\n    },\n    updateActiveId: values => {\n      dispatch({ type: \"ACTIVEID\", value: values })\n    },\n    updateActiveRow: values => {\n      dispatch({type: \"ACTIVEROW\",value: values});\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispacthToProps\n)(CardView);\n"]},"metadata":{},"sourceType":"module"}