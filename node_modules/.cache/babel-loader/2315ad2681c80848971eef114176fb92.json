{"ast":null,"code":"var _jsxFileName = \"/Users/karthik-6018/Documents/karthick/task/trip/src/store/index.jsx\";\nimport React, { useContext, createContext, useReducer } from \"react\";\nconst StoreContext = createContext();\nconst initialState = {\n  tripData: \"\",\n  url: \"http://detangled.in/develop/654da618-6cc8-4dc3-bac4-4688324b5f5f/events\",\n  activeId: \"\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"updateTripData\":\n      return {\n        tripData: action.tripData\n      };\n\n    case \"chnageActiveId\":\n      return {\n        activeId: action.activeId\n      };\n\n    default:\n      throw new Error(`Unexpected action type: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/React.createElement(StoreContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, children);\n};\nexport const useStore = () => useContext(StoreContext);","map":{"version":3,"sources":["/Users/karthik-6018/Documents/karthick/task/trip/src/store/index.jsx"],"names":["React","useContext","createContext","useReducer","StoreContext","initialState","tripData","url","activeId","reducer","state","action","type","Error","StoreProvider","children","dispatch","useStore"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,aAA5B,EAA2CC,UAA3C,QAA6D,OAA7D;AAEA,MAAMC,YAAY,GAAGF,aAAa,EAAlC;AAEA,MAAMG,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,GAAG,EAAE,yEAFc;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;;AAMA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,aAAO;AACLN,QAAAA,QAAQ,EAAEK,MAAM,CAACL;AADZ,OAAP;;AAGF,SAAK,gBAAL;AACE,aAAO;AACLE,QAAAA,QAAQ,EAAEG,MAAM,CAACH;AADZ,OAAP;;AAGF;AACE,YAAM,IAAIK,KAAJ,CAAW,2BAA0BF,MAAM,CAACC,IAAK,EAAjD,CAAN;AAVJ;AAYD,CAbD;;AAeA,OAAO,MAAME,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7C,QAAM,CAACL,KAAD,EAAQM,QAAR,IAAoBb,UAAU,CAACM,OAAD,EAAUJ,YAAV,CAApC;AAEA,sBACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAF;AAASM,MAAAA;AAAT,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,QADH,CADF;AAKD,CARM;AAUP,OAAO,MAAME,QAAQ,GAAG,MAAMhB,UAAU,CAACG,YAAD,CAAjC","sourcesContent":["import React, { useContext, createContext, useReducer } from \"react\";\n\nconst StoreContext = createContext();\n\nconst initialState = {\n  tripData: \"\",\n  url: \"http://detangled.in/develop/654da618-6cc8-4dc3-bac4-4688324b5f5f/events\",\n  activeId: \"\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"updateTripData\":\n      return {\n        tripData: action.tripData\n      };\n    case \"chnageActiveId\":\n      return {\n        activeId: action.activeId\n      };\n    default:\n      throw new Error(`Unexpected action type: ${action.type}`);\n  }\n};\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => useContext(StoreContext);\n"]},"metadata":{},"sourceType":"module"}