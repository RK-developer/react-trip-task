{"ast":null,"code":"var _jsxFileName = \"/Users/karthik-6018/Documents/karthick/task/trip/src/components/cardEditForm/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, message } from 'antd';\nimport { connect } from \"react-redux\";\nimport apiRequest from \"../../apiRequest\";\n\nconst CardEditForm = props => {\n  const [form] = Form.useForm();\n  const [formLayout, setFormLayout] = useState('horizontal');\n\n  const onFinish = values => {\n    console.log('Success:', values);\n    console.log('currentEditId: ', props.currentEditId);\n    let CardEditValue = {\n      activeId: props.currentEditId.id,\n      values: {\n        destination: values.destination,\n        comment: values.comments\n      }\n    },\n        newTripAllData = [...props.tripDatas];\n    apiRequest.updateTripData(props.urls, CardEditValue).then(results => {\n      //props.updateTripData(results.data);\n      console.log('results: ', results);\n      console.log('before: ', newTripAllData[props.currentEditId.index]);\n\n      if (newTripAllData[props.currentEditId.index].id == results.data.id) {\n        Object.assign(newTripAllData[props.currentEditId.index], results.data);\n        console.log('after: ', newTripAllData[props.currentEditId.index]);\n      }\n\n      newTripAllData[props.currentEditId.index] = results;\n      props.updateTripData();\n      message.success(\"Card Updated successfully\");\n      props.setCardModalVisible(false);\n    }).catch(error => {\n      message.error(\"Something went wrong, Card not updated\");\n      props.setCardModalVisible(true);\n    });\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  const formItemLayout = formLayout === 'horizontal' ? {\n    labelCol: {\n      span: 4\n    },\n    wrapperCol: {\n      span: 14\n    }\n  } : null;\n  const buttonItemLayout = formLayout === 'horizontal' ? {\n    wrapperCol: {\n      span: 14,\n      offset: 4\n    }\n  } : null;\n  useEffect(() => {\n    let carIndex = props.currentEditId.index;\n    form.setFieldsValue({\n      destination: props.tripDatas[carIndex].destination,\n      comments: props.tripDatas[carIndex].comment\n    });\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, Object.assign({}, formItemLayout, {\n    layout: formLayout,\n    form: form,\n    id: \"cardEditForm\",\n    name: \"cardEditForm\",\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Destination\",\n    name: \"destination\",\n    rules: [{\n      required: true,\n      message: 'Please enter destination!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Destination\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Comments\",\n    name: \"comments\",\n    rules: [{\n      required: true,\n      message: 'Please enter comments!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }))));\n};\n\nconst mapStateToProps = state => {\n  return {\n    urls: state.url,\n    tripDatas: state.allTripDatas,\n    currentEditId: state.currentEditId\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    updateTripData: values => {\n      dispatch({\n        type: \"TRIPDATA\",\n        value: values\n      });\n    },\n    updateActiveId: values => {\n      dispatch({\n        type: \"ACTIVEID\",\n        value: values\n      });\n    },\n    updateActiveRow: values => {\n      dispatch({\n        type: \"ACTIVEROW\",\n        value: values\n      });\n    },\n    updateCurrentEditId: values => {\n      dispatch({\n        type: \"CURRENTEDITID\",\n        value: values\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(CardEditForm);","map":{"version":3,"sources":["/Users/karthik-6018/Documents/karthick/task/trip/src/components/cardEditForm/index.jsx"],"names":["React","useState","useEffect","Form","Input","Button","message","connect","apiRequest","CardEditForm","props","form","useForm","formLayout","setFormLayout","onFinish","values","console","log","currentEditId","CardEditValue","activeId","id","destination","comment","comments","newTripAllData","tripDatas","updateTripData","urls","then","results","index","data","Object","assign","success","setCardModalVisible","catch","error","onFinishFailed","errorInfo","formItemLayout","labelCol","span","wrapperCol","buttonItemLayout","offset","carIndex","setFieldsValue","required","mapStateToProps","state","url","allTripDatas","mapDispacthToProps","dispatch","type","value","updateActiveId","updateActiveRow","updateCurrentEditId"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport { Form, Input, Button, message } from 'antd';\nimport { connect } from \"react-redux\";\nimport apiRequest from \"../../apiRequest\";\n\nconst CardEditForm = (props) => {\n    const [form] = Form.useForm();\n    const [formLayout, setFormLayout] = useState('horizontal');\n\n\n    const onFinish = values => {\n        console.log('Success:', values);\n        console.log('currentEditId: ', props.currentEditId);\n        let CardEditValue = {\n            activeId: props.currentEditId.id, \n            values: {\n                destination: values.destination,\n                comment: values.comments\n            }\n        },\n        newTripAllData = [...props.tripDatas];\n\n        apiRequest.updateTripData(props.urls,CardEditValue).then((results) => {\n            //props.updateTripData(results.data);\n\n            console.log('results: ', results);\n            console.log('before: ', newTripAllData[props.currentEditId.index]);\n            if(newTripAllData[props.currentEditId.index].id == results.data.id) {\n                Object.assign(newTripAllData[props.currentEditId.index],results.data);\n                console.log('after: ', newTripAllData[props.currentEditId.index]);\n            }\n            newTripAllData[props.currentEditId.index] = results\n            props.updateTripData() \n            message.success(\"Card Updated successfully\");\n            props.setCardModalVisible(false);\n        }).catch(error => {\n            message.error(\"Something went wrong, Card not updated\");\n            props.setCardModalVisible(true);\n        })\n\n      };\n    \n      const onFinishFailed = errorInfo => {\n        console.log('Failed:', errorInfo);\n      };\n\n    const formItemLayout =\n    formLayout === 'horizontal'\n      ? {\n          labelCol: {\n            span: 4,\n          },\n          wrapperCol: {\n            span: 14,\n          },\n        }\n      : null;\n  const buttonItemLayout =\n    formLayout === 'horizontal'\n      ? {\n          wrapperCol: {\n            span: 14,\n            offset: 4,\n          },\n        }\n      : null;\n\n    useEffect(() => {\n        let carIndex = props.currentEditId.index\n        form.setFieldsValue({\n            destination: props.tripDatas[carIndex].destination,\n            comments: props.tripDatas[carIndex].comment\n        })\n    }, [props])\n    return (\n        <div>\n            <Form\n                {...formItemLayout}\n                layout={formLayout}\n                form={form}\n                id=\"cardEditForm\"\n                name=\"cardEditForm\"\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item \n                label=\"Destination\"\n                name=\"destination\"\n                rules={[{ required: true, message: 'Please enter destination!' }]}\n                >\n                <Input placeholder=\"Destination\" />\n                </Form.Item>\n                \n                <Form.Item \n                label=\"Comments\"\n                name=\"comments\"\n                rules={[{ required: true, message: 'Please enter comments!' }]}\n                >\n                <Input placeholder=\"Comments\" />\n                </Form.Item>\n            </Form>\n        </div>\n    )\n};\n\n\nconst mapStateToProps = state => {\n    return {\n      urls: state.url,\n      tripDatas: state.allTripDatas,\n      currentEditId: state.currentEditId\n    };\n  };\n  const mapDispacthToProps = dispatch => {\n    return {\n      updateTripData: values => {\n        dispatch({ type: \"TRIPDATA\", value: values });\n      },\n      updateActiveId: values => {\n        dispatch({ type: \"ACTIVEID\", value: values })\n      },\n      updateActiveRow: values => {\n        dispatch({type: \"ACTIVEROW\",value: values});\n      },\n      updateCurrentEditId: values => {\n        dispatch({ type: \"CURRENTEDITID\",value: values })\n      }\n    };\n  };\n  export default connect(\n    mapStateToProps,\n    mapDispacthToProps\n  )(CardEditForm);"]},"metadata":{},"sourceType":"module"}