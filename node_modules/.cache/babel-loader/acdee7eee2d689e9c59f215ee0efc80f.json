{"ast":null,"code":"var _jsxFileName = \"/Users/karthik-6018/Documents/karthick/task/trip/src/components/cardview/index.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport { Card, Col, Row, Popconfirm, message } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport apiRequest from \"../../apiRequest\";\n\nconst CardView = props => {\n  const [activeClass, setActiveClass] = useState(0);\n\n  const tripCardClick = (id, index) => {\n    setActiveClass(id);\n    props.updateActiveRow(props.tripDatas[index]);\n  };\n\n  function confirm(e, id) {\n    e.stopPropagation();\n    console.log(e);\n    apiRequest.deleteTripData(props.url, {\n      activeId: id\n    }).then(result => {\n      message.success('Successfully Deleted');\n    });\n  }\n\n  function cancel(e) {\n    e.stopPropagation();\n    console.log(e);\n    message.error('Trip not delete');\n  }\n\n  useEffect(() => {\n    if (props.tripDatas[0] !== undefined) {\n      props.updateActiveRow(props.tripDatas[0]);\n    }\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"site-card-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, Object.keys(props.tripDatas).map(key => {\n    return /*#__PURE__*/React.createElement(Col, {\n      span: 8,\n      className: activeClass === props.tripDatas[key].id ? \"card-col active\" : \"card-col\",\n      key: 'trip-' + props.tripDatas[key].id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      title: props.tripDatas[key].destination,\n      bordered: true,\n      actions: [/*#__PURE__*/React.createElement(EditOutlined, {\n        key: \"edit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(Popconfirm, {\n        title: \"Are you sure delete this trip?\",\n        onConfirm: e => confirm(e, props.tripDatas[key].id),\n        onCancel: e => cancel(e),\n        okText: \"Yes\",\n        cancelText: \"No\",\n        onClick: e => e.stopPropagation(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: \"#\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, {\n        key: \"delete\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      })))],\n      onClick: e => tripCardClick(props.tripDatas[key].id, key),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"mr10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }\n    }, \"Date:\"), moment(props.tripDatas[key].start).format('MMM-DD-YYYY')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"mr10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Duration:\"), props.tripDatas[key].duration), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"trip-commnet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      className: \"mr10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, \"Comments:\"), props.tripDatas[key].comment)));\n  })));\n};\n\nconst mapStateToProps = state => {\n  return {\n    urls: state.url,\n    tripDatas: state.allTripDatas\n  };\n};\n\nconst mapDispacthToProps = dispatch => {\n  return {\n    updateTripData: values => {\n      dispatch({\n        type: \"TRIPDATA\",\n        value: values\n      });\n    },\n    updateActiveId: values => {\n      dispatch({\n        type: \"ACTIVEID\",\n        value: values\n      });\n    },\n    updateActiveRow: values => {\n      dispatch({\n        type: \"ACTIVEROW\",\n        value: values\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispacthToProps)(CardView);","map":{"version":3,"sources":["/Users/karthik-6018/Documents/karthick/task/trip/src/components/cardview/index.jsx"],"names":["React","useState","useEffect","moment","Card","Col","Row","Popconfirm","message","EditOutlined","DeleteOutlined","connect","apiRequest","CardView","props","activeClass","setActiveClass","tripCardClick","id","index","updateActiveRow","tripDatas","confirm","e","stopPropagation","console","log","deleteTripData","url","activeId","then","result","success","cancel","error","undefined","Object","keys","map","key","destination","start","format","duration","comment","mapStateToProps","state","urls","allTripDatas","mapDispacthToProps","dispatch","updateTripData","values","type","value","updateActiveId"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport moment from \"moment\";\nimport { Card, Col, Row, Popconfirm, message   } from \"antd\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport apiRequest from \"../../apiRequest\";\nconst CardView = (props) => {\n  const[activeClass, setActiveClass] = useState(0);\n\n  const tripCardClick = (id,index) => {\n    setActiveClass(id);\n    props.updateActiveRow(props.tripDatas[index]);\n  }\n  function confirm(e,id) {\n    e.stopPropagation();\n    console.log(e);\n    apiRequest.deleteTripData(props.url,{activeId: id}).then((result) => {\n      message.success('Successfully Deleted');\n    })\n  }\n  \n  function cancel(e) {\n    e.stopPropagation();\n    console.log(e);\n    message.error('Trip not delete');\n  }\n  useEffect(() => {\n    if(props.tripDatas[0] !== undefined) {\n      props.updateActiveRow(props.tripDatas[0]);\n    }\n  },[props])\n  return (\n    <div className=\"site-card-wrapper\">\n      <Row gutter={16}>\n       {\n         \n         Object.keys(props.tripDatas).map(key => {\n          return (\n            <Col span={8} className={activeClass === props.tripDatas[key].id ? \"card-col active\": \"card-col\"} key={'trip-'+props.tripDatas[key].id}>\n              <Card\n                title={props.tripDatas[key].destination}\n                bordered={true}\n                actions={[\n                  <EditOutlined key=\"edit\" />,\n                  <Popconfirm\n                    title=\"Are you sure delete this trip?\"\n                    onConfirm={(e) => confirm(e, props.tripDatas[key].id)}\n                    onCancel={(e) => cancel(e)}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    <a href=\"#\"><DeleteOutlined key=\"delete\" /></a>\n                  </Popconfirm>,\n                ]}\n              onClick={(e) => tripCardClick(props.tripDatas[key].id, key)}\n              >\n                <div className=\"trip-date\">\n                  <b className=\"mr10\">Date:</b>{moment(props.tripDatas[key].start).format('MMM-DD-YYYY')}\n                </div>\n                <div className=\"trip-duration\">\n                  <b className=\"mr10\">Duration:</b>{props.tripDatas[key].duration}\n                </div>\n                <div className=\"trip-commnet\">\n                  <b className=\"mr10\">Comments:</b>{props.tripDatas[key].comment}\n                </div>\n              </Card>\n            </Col>\n          )\n\n         })\n       }\n        \n      </Row>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    urls: state.url,\n    tripDatas: state.allTripDatas\n  };\n};\nconst mapDispacthToProps = dispatch => {\n  return {\n    updateTripData: values => {\n      dispatch({ type: \"TRIPDATA\", value: values });\n    },\n    updateActiveId: values => {\n      dispatch({ type: \"ACTIVEID\", value: values })\n    },\n    updateActiveRow: values => {\n      dispatch({type: \"ACTIVEROW\",value: values});\n    }\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispacthToProps\n)(CardView);\n"]},"metadata":{},"sourceType":"module"}